1.
->
객체 범위내에 객체에 접근하기 위해서 사용하는 오퍼레이터 
예시 test class{
     function test () {
	print("test");
}	
}
test2 class{
       $test = new test();
	print(test->test());//출력문은 test
}

class car {
	
public String test(){
	return "현대";
}
	
}

String car = new car();
String hyundai = car.test();
syso(hyundai)
//출력값이 현대가나오는데

=> 
배열의 키, 값을 할당 할 때 사용하는 오퍼레이터
$arr = array("test" => "예승님");
print($arr["test"]);
//출력문은 예승님
---------------------/
::
class내부에 const(상수), statict으로 선언된 변수에 접근할 수 있는 연산자
class test(){
const kia = 'sorrento';

function test(){
return self::kia 

}

test();
//출력값은 sorrento;
} 

const변경이 불가능한 고정값을 의미 값 변경불가 클래스명으로 접근가능 ::
static 값이 고정된다 수정이되지만 다른 인스턴스에서 수정시 같이 수정된다.
값을 다른 곳에서 공유가 가능
 
---------------------/


$
변수를 선언될 때 사용되는 기호 

$this
현재 인스턴스의 함수나 변수를 가리킬 때 사용 
자기 자신의 클래스 인스턴스의 값들에 접근할 때 사용한다.
새로 생성된 인스턴스를 가리키고 새로운 인스턴의 값을 가르킬 떄 $this를 사용 

class test{
	
	public $year;	

	function setYear(int $year){
	$this->year = $year;
}
	function getYear(){
	return $this->year;
}

	function testx(){
	echo "나는 " . getyear() . "년에 태어났습니다";

}

}


	$num = new test;
	$num->textx(1996);
	echo $num;
	//출려값은 나는 1996년에 태어났습니다.;

self::
현재 클래스에서 가리켜야하는 경우 self를 사용
self:: 현재 클래스에서 const,static을 사용가능하게 만듬 

test::test;
const상수에 접근이 가능하다. 

...
가변길이 인수 목록을 지원한다.
인수는 주어진 변수에 배열로 전달된다. 
https://www.php.net/manual/en/functions.arguments.php

2.
함수
 특정작업을 수행하기위한 객체?이다.
독립된 기능을 생성하고 처리이후 사용자가 원하는 값을 return시킬 수 있다.

메서드
클래스함수라고 부른다.
클래스 내부에서 생성된 메소드 객체가 생성되고 참조해야 메소드를 사용가능하다.

아규먼트
함수를 호출하는 부분 전달인자?라고 한다 함수를 호출하는거라고 보면 된다.
test(1, 2)

파라미터
매개변수라고 부르며 함수에서 데이터가 대입되는 변수를 의미한다
예시
function test(int parametervalue, string parametervalue2 ){
	parametervalue = 1; //가된다.
	parametervalue2 =2; //가된다
}

